import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MapPin, Clock, CheckCircle, XCircle, AlertTriangle, Wrench } from 'lucide-react-native';\nimport { DrivewyzeWeighStation } from '@/types';\nimport { colors } from '@/constants/colors';\n\ninterface DrivewyzeWeighStationCardProps {\n  station: DrivewyzeWeighStation;\n  onPress?: () => void;\n  onBypassRequest?: () => void;\n  showDistance?: boolean;\n}\n\nexport const DrivewyzeWeighStationCard: React.FC<DrivewyzeWeighStationCardProps> = ({\n  station,\n  onPress,\n  onBypassRequest,\n  showDistance = true\n}) => {\n  const getStatusIcon = () => {\n    switch (station.status) {\n      case 'open':\n        return <CheckCircle size={20} color={colors.success} />;\n      case 'closed':\n        return <XCircle size={20} color={colors.danger} />;\n      case 'bypass_available':\n        return <CheckCircle size={20} color={colors.primary} />;\n      case 'maintenance':\n        return <Wrench size={20} color={colors.warning} />;\n      default:\n        return <AlertTriangle size={20} color={colors.warning} />;\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (station.status) {\n      case 'open':\n        return colors.success;\n      case 'closed':\n        return colors.danger;\n      case 'bypass_available':\n        return colors.primary;\n      case 'maintenance':\n        return colors.warning;\n      default:\n        return colors.warning;\n    }\n  };\n\n  const getStatusText = () => {\n    switch (station.status) {\n      case 'open':\n        return 'Open';\n      case 'closed':\n        return 'Closed';\n      case 'bypass_available':\n        return 'Bypass Available';\n      case 'maintenance':\n        return 'Maintenance';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const getBypassStatusColor = () => {\n    switch (station.bypassStatus) {\n      case 'approved':\n        return colors.success;\n      case 'denied':\n        return colors.danger;\n      case 'pending':\n        return colors.warning;\n      default:\n        return colors.text.secondary;\n    }\n  };\n\n  return (\n    <TouchableOpacity style={styles.container} onPress={onPress} activeOpacity={0.7}>\n      <View style={styles.header}>\n        <View style={styles.titleRow}>\n          <Text style={styles.name} numberOfLines={1}>\n            {station.name}\n          </Text>\n          <View style={[styles.statusBadge, { backgroundColor: getStatusColor() }]}>\n            {getStatusIcon()}\n            <Text style={styles.statusText}>{getStatusText()}</Text>\n          </View>\n        </View>\n        \n        <View style={styles.locationRow}>\n          <MapPin size={16} color={colors.text.secondary} />\n          <Text style={styles.location} numberOfLines={1}>\n            {station.location.address}\n          </Text>\n        </View>\n      </View>\n\n      <View style={styles.details}>\n        <View style={styles.detailRow}>\n          <Text style={styles.detailLabel}>Highway:</Text>\n          <Text style={styles.detailValue}>{station.location.highway}</Text>\n        </View>\n        \n        {station.location.mileMarker && (\n          <View style={styles.detailRow}>\n            <Text style={styles.detailLabel}>Mile Marker:</Text>\n            <Text style={styles.detailValue}>{station.location.mileMarker}</Text>\n          </View>\n        )}\n        \n        {showDistance && station.distance && (\n          <View style={styles.detailRow}>\n            <Text style={styles.detailLabel}>Distance:</Text>\n            <Text style={styles.detailValue}>{station.distance.toFixed(1)} miles</Text>\n          </View>\n        )}\n        \n        {station.estimatedArrival && (\n          <View style={styles.detailRow}>\n            <Clock size={16} color={colors.text.secondary} />\n            <Text style={styles.detailValue}>ETA: {new Date(station.estimatedArrival).toLocaleTimeString()}</Text>\n          </View>\n        )}\n      </View>\n\n      {station.bypassEligible && (\n        <View style={styles.bypassSection}>\n          <View style={styles.bypassInfo}>\n            <Text style={styles.bypassLabel}>Bypass Eligible</Text>\n            {station.bypassStatus && (\n              <Text style={[styles.bypassStatus, { color: getBypassStatusColor() }]}>\n                {station.bypassStatus.charAt(0).toUpperCase() + station.bypassStatus.slice(1)}\n              </Text>\n            )}\n          </View>\n          \n          {station.status === 'bypass_available' && onBypassRequest && (\n            <TouchableOpacity \n              style={styles.bypassButton} \n              onPress={onBypassRequest}\n              activeOpacity={0.7}\n            >\n              <Text style={styles.bypassButtonText}>Request Bypass</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      )}\n\n      {station.services.length > 0 && (\n        <View style={styles.servicesSection}>\n          <Text style={styles.servicesLabel}>Services:</Text>\n          <View style={styles.servicesList}>\n            {station.services.slice(0, 3).map((service, index) => (\n              <View key={index} style={styles.serviceTag}>\n                <Text style={styles.serviceText}>{service}</Text>\n              </View>\n            ))}\n            {station.services.length > 3 && (\n              <Text style={styles.moreServices}>+{station.services.length - 3} more</Text>\n            )}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.card,\n    borderRadius: 12,\n    padding: 16,\n    marginVertical: 6,\n    marginHorizontal: 16,\n    shadowColor: colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  header: {\n    marginBottom: 12,\n  },\n  titleRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text.primary,\n    flex: 1,\n    marginRight: 12,\n  },\n  statusBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    gap: 4,\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: colors.white,\n  },\n  locationRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  location: {\n    fontSize: 14,\n    color: colors.text.secondary,\n    flex: 1,\n  },\n  details: {\n    gap: 6,\n    marginBottom: 12,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  detailLabel: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: colors.text.secondary,\n    minWidth: 80,\n  },\n  detailValue: {\n    fontSize: 14,\n    color: colors.text.primary,\n    flex: 1,\n  },\n  bypassSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingTop: 12,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n    marginBottom: 12,\n  },\n  bypassInfo: {\n    flex: 1,\n  },\n  bypassLabel: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: colors.primary,\n  },\n  bypassStatus: {\n    fontSize: 12,\n    fontWeight: '500',\n    marginTop: 2,\n  },\n  bypassButton: {\n    backgroundColor: colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n  },\n  bypassButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: colors.white,\n  },\n  servicesSection: {\n    paddingTop: 12,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  servicesLabel: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: colors.text.secondary,\n    marginBottom: 8,\n  },\n  servicesList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n    alignItems: 'center',\n  },\n  serviceTag: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 6,\n  },\n  serviceText: {\n    fontSize: 12,\n    color: colors.text.primary,\n  },\n  moreServices: {\n    fontSize: 12,\n    color: colors.text.secondary,\n    fontStyle: 'italic',\n  },\n});\n