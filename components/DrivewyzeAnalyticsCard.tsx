import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { TrendingUp, Clock, Fuel, DollarSign, CheckCircle, XCircle } from 'lucide-react-native';\nimport { DrivewyzeAnalytics } from '@/types';\nimport { colors } from '@/constants/colors';\n\ninterface DrivewyzeAnalyticsCardProps {\n  analytics: DrivewyzeAnalytics;\n}\n\nexport const DrivewyzeAnalyticsCard: React.FC<DrivewyzeAnalyticsCardProps> = ({ analytics }) => {\n  const approvalRate = analytics.totalBypassRequests > 0 \n    ? (analytics.approvedBypasses / analytics.totalBypassRequests) * 100 \n    : 0;\n\n  const formatTime = (minutes: number) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    if (hours > 0) {\n      return `${hours}h ${mins}m`;\n    }\n    return `${mins}m`;\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TrendingUp size={24} color={colors.primary} />\n        <Text style={styles.title}>Drivewyze Analytics</Text>\n      </View>\n\n      <View style={styles.statsGrid}>\n        <View style={styles.statCard}>\n          <View style={styles.statHeader}>\n            <CheckCircle size={20} color={colors.success} />\n            <Text style={styles.statValue}>{analytics.approvedBypasses}</Text>\n          </View>\n          <Text style={styles.statLabel}>Approved Bypasses</Text>\n          <Text style={styles.statSubtext}>\n            {approvalRate.toFixed(1)}% approval rate\n          </Text>\n        </View>\n\n        <View style={styles.statCard}>\n          <View style={styles.statHeader}>\n            <XCircle size={20} color={colors.danger} />\n            <Text style={styles.statValue}>{analytics.deniedBypasses}</Text>\n          </View>\n          <Text style={styles.statLabel}>Denied Bypasses</Text>\n          <Text style={styles.statSubtext}>\n            {analytics.totalBypassRequests} total requests\n          </Text>\n        </View>\n\n        <View style={styles.statCard}>\n          <View style={styles.statHeader}>\n            <Clock size={20} color={colors.primary} />\n            <Text style={styles.statValue}>{formatTime(analytics.timeSaved)}</Text>\n          </View>\n          <Text style={styles.statLabel}>Time Saved</Text>\n          <Text style={styles.statSubtext}>\n            Avg {Math.round(analytics.timeSaved / Math.max(analytics.approvedBypasses, 1))}m per bypass\n          </Text>\n        </View>\n\n        <View style={styles.statCard}>\n          <View style={styles.statHeader}>\n            <Fuel size={20} color={colors.warning} />\n            <Text style={styles.statValue}>{analytics.fuelSaved.toFixed(1)}</Text>\n          </View>\n          <Text style={styles.statLabel}>Gallons Saved</Text>\n          <Text style={styles.statSubtext}>\n            Reduced fuel consumption\n          </Text>\n        </View>\n\n        <View style={styles.statCard}>\n          <View style={styles.statHeader}>\n            <DollarSign size={20} color={colors.success} />\n            <Text style={styles.statValue}>{formatCurrency(analytics.costSaved)}</Text>\n          </View>\n          <Text style={styles.statLabel}>Cost Savings</Text>\n          <Text style={styles.statSubtext}>\n            Time + fuel savings\n          </Text>\n        </View>\n\n        <View style={styles.statCard}>\n          <View style={styles.statHeader}>\n            <TrendingUp size={20} color={colors.primary} />\n            <Text style={styles.statValue}>{analytics.complianceScore}</Text>\n          </View>\n          <Text style={styles.statLabel}>Compliance Score</Text>\n          <Text style={styles.statSubtext}>\n            Out of 100\n          </Text>\n        </View>\n      </View>\n\n      {analytics.monthlyStats.length > 0 && (\n        <View style={styles.monthlySection}>\n          <Text style={styles.sectionTitle}>Monthly Breakdown</Text>\n          {analytics.monthlyStats.map((month, index) => (\n            <View key={index} style={styles.monthlyRow}>\n              <Text style={styles.monthName}>{month.month}</Text>\n              <View style={styles.monthlyStats}>\n                <Text style={styles.monthlyValue}>{month.bypasses} bypasses</Text>\n                <Text style={styles.monthlyValue}>{formatTime(month.timeSaved)}</Text>\n                <Text style={styles.monthlyValue}>{formatCurrency(month.costSaved)}</Text>\n              </View>\n            </View>\n          ))}\n        </View>\n      )}\n\n      <View style={styles.footer}>\n        <Text style={styles.lastUpdated}>\n          Last updated: {new Date(analytics.lastUpdated).toLocaleString()}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.card,\n    borderRadius: 12,\n    padding: 16,\n    margin: 16,\n    shadowColor: colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    gap: 12,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: colors.text.primary,\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n    marginBottom: 20,\n  },\n  statCard: {\n    backgroundColor: colors.background.secondary,\n    borderRadius: 8,\n    padding: 12,\n    flex: 1,\n    minWidth: '45%',\n  },\n  statHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  statValue: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: colors.text.primary,\n  },\n  statLabel: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: colors.text.secondary,\n    marginBottom: 4,\n  },\n  statSubtext: {\n    fontSize: 10,\n    color: colors.text.secondary,\n  },\n  monthlySection: {\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: colors.text.primary,\n    marginBottom: 12,\n  },\n  monthlyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.border,\n  },\n  monthName: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: colors.text.primary,\n    flex: 1,\n  },\n  monthlyStats: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  monthlyValue: {\n    fontSize: 12,\n    color: colors.text.secondary,\n    minWidth: 60,\n    textAlign: 'right',\n  },\n  footer: {\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: colors.border,\n  },\n  lastUpdated: {\n    fontSize: 12,\n    color: colors.text.secondary,\n    textAlign: 'center',\n  },\n});\n